/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.SessionUser;
import Persistencia.Entities.Usuario;
import Persistencia.Implementacion.ImplPermisos;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sebas
 */
public class Permisos extends javax.swing.JFrame {

    private ImplPermisos implPermisos;

    /**
     * Creates new form Permisos
     */
    public Permisos() {
        implPermisos = new ImplPermisos();
        initComponents();
        initElement();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnGuardar_Permisos = new javax.swing.JButton();
        btnCancelar_Permisos = new javax.swing.JButton();
        btnOpcion_Permisos = new javax.swing.JButton();
        txtDescripcion_Permisos = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo_Permisos = new javax.swing.JTextField();
        panelGrid_Permisos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableGrid_Permisos = new javax.swing.JTable();
        txtBuscar_Codigo_Permisos = new javax.swing.JTextField();
        txtBuscar_Descripcion_Permisos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setTitle("Permisos");

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setText("Descripción");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        btnGuardar_Permisos.setText("Guardar");
        btnGuardar_Permisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar_PermisosActionPerformed(evt);
            }
        });

        btnCancelar_Permisos.setText("Cancelar");
        btnCancelar_Permisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelar_PermisosActionPerformed(evt);
            }
        });

        btnOpcion_Permisos.setText("Nuevo");
        btnOpcion_Permisos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpcion_PermisosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnOpcion_Permisos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnCancelar_Permisos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(btnGuardar_Permisos, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(btnGuardar_Permisos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar_Permisos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpcion_Permisos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jLabel1.setText("Código");

        txtCodigo_Permisos.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDescripcion_Permisos, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtCodigo_Permisos))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCodigo_Permisos, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcion_Permisos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        tableGrid_Permisos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción "
            }
        ));
        jScrollPane1.setViewportView(tableGrid_Permisos);

        jLabel3.setText("Id");

        jLabel4.setText("Descripcón");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Todos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGrid_PermisosLayout = new javax.swing.GroupLayout(panelGrid_Permisos);
        panelGrid_Permisos.setLayout(panelGrid_PermisosLayout);
        panelGrid_PermisosLayout.setHorizontalGroup(
            panelGrid_PermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGrid_PermisosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGrid_PermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGrid_PermisosLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(panelGrid_PermisosLayout.createSequentialGroup()
                        .addGroup(panelGrid_PermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBuscar_Codigo_Permisos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelGrid_PermisosLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(95, 95, 95)
                        .addGroup(panelGrid_PermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBuscar_Descripcion_Permisos, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelGrid_PermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(21, 21, 21))))
        );
        panelGrid_PermisosLayout.setVerticalGroup(
            panelGrid_PermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGrid_PermisosLayout.createSequentialGroup()
                .addGroup(panelGrid_PermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGrid_PermisosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar_Codigo_Permisos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(panelGrid_PermisosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelGrid_PermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelGrid_PermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBuscar_Descripcion_Permisos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelGrid_PermisosLayout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                                .addGap(4, 4, 4)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelGrid_Permisos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelGrid_Permisos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardar_PermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar_PermisosActionPerformed
        String g = btnGuardar_Permisos.getText();
        switch (g) {
            case "Guardar":
                this.guardar();
                break;
            case "Guardar Cambios":
                this.editar();
                break;
        }
        btnPorDefecto();
        limpiarCampos();
    }//GEN-LAST:event_btnGuardar_PermisosActionPerformed

    private void btnCancelar_PermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelar_PermisosActionPerformed
        limpiarCampos();
        btnPorDefecto();
    }//GEN-LAST:event_btnCancelar_PermisosActionPerformed

    private void btnOpcion_PermisosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpcion_PermisosActionPerformed
        String g = btnOpcion_Permisos.getText();
        switch (g) {
            case "Eliminar":
                this.eliminar();
                break;
        }
        btnPorDefecto();
        limpiarCampos();
    }//GEN-LAST:event_btnOpcion_PermisosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        findAll(implPermisos.buscar(txtBuscar_Codigo_Permisos.getText(), txtBuscar_Descripcion_Permisos.getText()));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        findAllEntities();
        txtBuscar_Codigo_Permisos.setText("");
        txtBuscar_Descripcion_Permisos.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Permisos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Permisos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Permisos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Permisos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Permisos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar_Permisos;
    private javax.swing.JButton btnGuardar_Permisos;
    private javax.swing.JButton btnOpcion_Permisos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelGrid_Permisos;
    private javax.swing.JTable tableGrid_Permisos;
    private javax.swing.JTextField txtBuscar_Codigo_Permisos;
    private javax.swing.JTextField txtBuscar_Descripcion_Permisos;
    private javax.swing.JTextField txtCodigo_Permisos;
    private javax.swing.JTextField txtDescripcion_Permisos;
    // End of variables declaration//GEN-END:variables

    public void cargarDatoGrid(String codigo) {
        String descripcion = txtDescripcion_Permisos.getText();
        addRow(codigo, descripcion);
    }

    public void addRow(String codigo, String descripcion) {
        DefaultTableModel model = (DefaultTableModel) tableGrid_Permisos.getModel();
        model.addRow(new Object[]{codigo, descripcion});
    }

    private void limpiarCampos() {
        txtCodigo_Permisos.setText("");
        txtDescripcion_Permisos.setText("");
    }

    private void initElement() {
        findAllEntities();
        tableGrid_Permisos.addMouseListener(new MouseListener() {

            @Override
            public void mouseClicked(MouseEvent e) {
                int fila = tableGrid_Permisos.rowAtPoint(e.getPoint());
                int columna = tableGrid_Permisos.columnAtPoint(e.getPoint());
                if ((fila > -1) && (columna > -1)) {
                    txtCodigo_Permisos.setText(getRowVector(fila)[0]);
                    txtDescripcion_Permisos.setText(getRowVector(fila)[1]);
                    btnGuardar_Permisos.setText("Guardar Cambios");
                    btnOpcion_Permisos.setText("Eliminar");
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

            private void btnPorDefecto() {

            }
        });
    }

    public String[] getRowVector(int fila) {
        DefaultTableModel model = (DefaultTableModel) tableGrid_Permisos.getModel();
        int col = tableGrid_Permisos.getColumnCount();
        String result = "";
        for (int i = 0; i < col; i++) {
            result += (i == 0 ? "" : " - ") + model.getValueAt(fila, i).toString();
        }
        return result.split("-");
    }

    private void btnPorDefecto() {
        btnGuardar_Permisos.setText("Guardar");
        btnOpcion_Permisos.setText("Nuevo");
    }

    public void guardar() {
        try {
            Boolean validar = true;
            if (txtDescripcion_Permisos.getText().equals("")) {
                validar = false;
            }
            if (validar) {
                Persistencia.Entities.Permisos permisos = new Persistencia.Entities.Permisos();
                permisos.setDescripcion(txtDescripcion_Permisos.getText());
                if (implPermisos.createPermisos(permisos) != null) {
                    JOptionPane.showMessageDialog(this, "Permiso creado");
                    cargarDatoGrid(permisos.getIdPermisos().toString());
                } else {
                    JOptionPane.showMessageDialog(this, "Error al crear el Permiso");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error");
            e.printStackTrace();
        }
    }

    private void editar() {
        try {
            Boolean validar = true;
            if (txtDescripcion_Permisos.getText().equals("")) {
                validar = false;
            }
            if (validar) {
                Persistencia.Entities.Permisos permisos = implPermisos.findPermisosesById(Integer.parseInt(txtCodigo_Permisos.getText().trim()));
                permisos.setDescripcion(txtDescripcion_Permisos.getText());
                if (implPermisos.editarPermisos(permisos) != null) {
                    JOptionPane.showMessageDialog(this, "Permiso Editado");
                    clear_Table();
                    findAllEntities();
                } else {
                    JOptionPane.showMessageDialog(this, "Error al Editar el Permiso");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error");
            e.printStackTrace();
        }
    }

    private void eliminar() {
        try {
            Persistencia.Entities.Permisos permisos = implPermisos.findPermisosesById(Integer.parseInt(txtCodigo_Permisos.getText().trim()));
            Boolean validar = true;
            String mensaje = "";
            if (txtCodigo_Permisos.getText().equals("")) {
                validar = false;
            }
            if (permisos.getPerfilList().size() != 0) {
                mensaje += "Hay Usuarios con este Perfil \n";
                validar = false;
            }
            if (validar) {
                if (implPermisos.elimiarPermisos(permisos) == null) {
                    JOptionPane.showMessageDialog(this, "Permiso Eliminado");
                    clear_Table();
                    findAllEntities();
                } else {
                    JOptionPane.showMessageDialog(this, "Error al Elimimnar el Permiso");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error");
            e.printStackTrace();
        }
    }

    private void clear_Table() {
        DefaultTableModel modelo = (DefaultTableModel) tableGrid_Permisos.getModel();
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }

    }

    private void findAllEntities() {
        clear_Table();
        List<Persistencia.Entities.Permisos> list = implPermisos.findPermisosEntities();
        for (int i = 0; i < list.size(); i++) {
            addRow(list.get(i).getIdPermisos().toString(), list.get(i).getDescripcion());
        }
    }

    private void findAll(List<Persistencia.Entities.Permisos> list) {
        clear_Table();
        for (int i = 0; i < list.size(); i++) {
            addRow(list.get(i).getIdPermisos().toString(),
                    list.get(i).getDescripcion().toString());
        }
    }

    private boolean isValidarSession() {
        Usuario usuario = SessionUser.getUsuario();
        Boolean res = false;
        if (usuario != null) {
            List<Persistencia.Entities.Permisos> listP = usuario.getIdperfil().getPermisosList();
            for (int i = 0; i < listP.size(); i++) {
                if (listP.get(i).getIdPermisos() == SessionUser.isPermisos) {
                    res = true;
                }
            }
        }
        return res;
    }
}
